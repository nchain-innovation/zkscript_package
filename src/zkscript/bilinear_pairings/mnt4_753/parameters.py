# Curve parameters -----------------------------------------------------------------------------------------------------

# Seed
u = -0x15474B1D641A3FD86DCBCEE5DCDA7FE51852C8CBE26E600733B714AA43C31A66B0344C4E2C428B07A7713041BA18000

# Signed base two decomposition of abs(u) - MSB to LSB (minus_exp_u is LSB to MSB)
minus_exp_miller_loop = [
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    -1,
    0,
    1,
    0,
    1,
    0,
    -1,
    0,
    -1,
    0,
    0,
    1,
    0,
    0,
    0,
    -1,
    0,
    -1,
    0,
    -1,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    -1,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    -1,
    0,
    -1,
    0,
    0,
    0,
    1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    1,
    0,
    -1,
    0,
    0,
    0,
    -1,
    0,
    1,
    0,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    1,
    0,
    -1,
    0,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    1,
    0,
    0,
    -1,
    0,
    -1,
    0,
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    -1,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    0,
    -1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    -1,
    0,
    -1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    -1,
    0,
    1,
    0,
    -1,
    0,
    0,
    0,
    0,
    -1,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    1,
    0,
    -1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    -1,
    0,
    1,
    0,
    -1,
    0,
    1,
    0,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    -1,
    0,
    0,
    0,
    1,
    0,
    -1,
    0,
    0,
    1,
    0,
    -1,
    0,
    1,
    0,
    1,
    0,
    -1,
    0,
    1,
    0,
    0,
    -1,
    0,
    -1,
    0,
    -1,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    -1,
    0,
    1,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    -1,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    -1,
    0,
    0,
    1,
    0,
    -1,
    0,
    -1,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    0,
    1,
    0,
    -1,
    0,
    -1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    -1,
    0,
    1,
    0,
    1,
    0,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    0,
    1,
    0,
    1,
    0,
    -1,
    0,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    0,
    0,
    1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    1,
    0,
    0,
    0,
    1,
    0,
    -1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
][::-1]
exp_miller_loop = [-el for el in minus_exp_miller_loop]

# Modulus
q = u**2 + u + 1

# r-torsion = q - t + 1
r = u**2 + 1

# Curve coefficients
a = 2
twisted_a = [26, 0]

# Non-residues
NON_RESIDUE_FQ = 13

# Embedding degrees and other constants
EMBEDDING_DEGREE = 4
TWIST_DEGREE = 2
EXTENSION_DEGREE = EMBEDDING_DEGREE // TWIST_DEGREE
N_POINTS_CURVE = 2
N_POINTS_TWIST = EXTENSION_DEGREE * N_POINTS_CURVE
N_ELEMENTS_MILLER_OUTPUT = 4
N_ELEMENTS_EVALUATION_OUTPUT = 3
N_ELEMENTS_EVALUATION_TIMES_EVALUATION = 4

# Gammas for Frobenius
GAMMAS = [
    # NON_RESIDUE_FQ2.power((q-1)/2)
    [
        18691656569803771296244054523431852464958959799019013859007259692542121208304602539555350517075508287829753932558576476751900235650227380562700444433662761577027341858128610410779088384480737679672900770810745291515010467307990,
        0,
    ],
    # NON_RESIDUE_FQ2.power((q**2-1)/2)
    [
        41898490967918953402344214791240637128170709919953949071783502921025352812571106773058893763790338921418070971888253786114353726529584385201591605722013126468931404347949840543007986327743462853720628051692141265303114721689600,
        0,
    ],
    # NON_RESIDUE_FQ2.power((q**3-1)/2)
    [
        23206834398115182106100160267808784663211750120934935212776243228483231604266504233503543246714830633588317039329677309362453490879357004638891161288350364891904062489821230132228897943262725174047727280881395973788104254381611,
        0,
    ],
]

# -------------------------------------------------------------------------------------------------------------------
